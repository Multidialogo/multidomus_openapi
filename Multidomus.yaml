openapi: 3.1.0
x-stoplight:
  id: pwf784ccdu36j
info:
  title: Multidomus
  version: '1.0'
  description: Set of API endpoints for the Multidomus app
servers:
  - url: 'https://api.multidomus.it'
paths:
  /tasks:
    get:
      summary: Get tasks by company id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'
              examples:
                Example 1:
                  value:
                    - title: Tetto
                      description: Ci sono perdite perché si è rotta una tegola del tetto
                      issueDate: '2019-08-24T14:15:22Z'
                      status: Nuovo
                      note: la grandine ha rotto la tegola
                      priority: Alta
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      operationId: get-tasks-by-company-id
      parameters:
        - schema:
            type: string
            format: uuid
          in: query
          name: company-id
          required: true
          description: The UUID of the company to get info about
      description: Retrieve the current tasks for the given company
      x-stoplight:
        id: t2ehtm7y4gnss
      tags:
        - Supplier
    parameters: []
  /administrator:
    get:
      summary: Get administrator details by condo id
      tags:
        - Tenant
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Administrator'
              examples:
                Example 1:
                  value:
                    firstName: Harold
                    lastName: Hogan
                    role: string
                    creationDate: '2019-08-24T14:15:22Z'
                    lastUpdateDate: '2019-08-24T14:15:22Z'
                    studio: Stark Industries
                    receptionHours: Lun-Ven 8-13 14-18
                    address: 'Via Emilia Ovest, 129'
                    contacts:
                      id: string
                      phone: '345123456789'
                      emergencyPhone: string
                      email: happy@gmail.com
                      pec: user@pec-example.com
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      operationId: get-administrator-by-condo-id
      x-stoplight:
        id: b45udl5e8l11f
      parameters:
        - schema:
            type: string
            format: uuid
          in: query
          name: condo-id
          required: true
          description: The UUID of the condo to get info about
      description: Retrieve the information of the administrator for the given condo
    parameters: []
  /alerts:
    get:
      summary: Get alerts
      tags:
        - Tenant
        - Admin
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  x-stoplight:
                    id: z01xzblv4xbbs
                  type: object
                  properties:
                    condo-id:
                      type: string
                      x-stoplight:
                        id: kh8lmvra8539u
                      format: uuid
                    alerts:
                      type: array
                      x-stoplight:
                        id: pnh1pv2y8njh9
                      items:
                        $ref: '#/components/schemas/Alert'
                        x-stoplight:
                          id: 7p7i52uwl4yvr
              examples:
                Example 1:
                  value:
                    - condoId: 2f78814f-e2c6-46b8-a02d-89e129b8dd05
                      alerts:
                        - title: Biciclette
                          description: Si prega di evitare di lasciare biciclette nell'androne
                          creationDate: '2019-08-24T14:15:22Z'
                          type: Regolamento
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      operationId: get-alerts-by-condo-id
      parameters:
        - schema:
            type: string
            format: uuid
          in: query
          name: condo-id
          description: The UUID of the condo to get info about
      x-stoplight:
        id: 1wp94f9d6cin3
      description: 'Retrieve all the current alerts for current user, can be filtered by condo-id'
    parameters: []
    post:
      summary: Send alert
      operationId: post-alerts
      responses:
        '201':
          description: Created
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
      requestBody:
        content:
          application/json:
            schema:
              type: object
              x-examples:
                Example 1:
                  condo-id: 2f78814f-e2c6-46b8-a02d-89e129b8dd05
                  title: Perdita tetto
                  content: Dal mio soffitto entra acqua che arriva dal tetto
                  type: Guasto
                  visible-to-all: true
              properties:
                condo-id:
                  type: string
                title:
                  type: string
                content:
                  type: string
                type:
                  type: string
                  enum:
                    - Guasto
                    - Problema
                    - Richiesta Informazioni
                    - Altro
                visible-to-all:
                  type: boolean
              required:
                - condo-id
                - content
                - type
            examples:
              Example 1:
                value:
                  condo-id: 2f78814f-e2c6-46b8-a02d-89e129b8dd05
                  title: Perdita tetto
                  content: Dal mio soffitto entra acqua che arriva dal tetto
                  type: Guasto
                  visible-to-all: true
              Example 2:
                value:
                  condo-id: 2f78814f-e2c6-46b8-a02d-89e129b8dd05
                  title: Pagamenti
                  content: Posso fare un bonifico da un IBAN estero?
                  type: Richiesta Informazioni
                  visible-to-all: false
      description: Send an alert related to a condo
      tags:
        - Admin
        - Tenant
  /condo:
    get:
      summary: Get condo details by condo id
      tags:
        - Tenant
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Condo'
              examples:
                Example 1:
                  value:
                    name: Morgan
                    address: 'Via Emilia Ovest, 129'
                    fiscalCode: STRTNY70E29Z404M
                    type: Condominio
                    creationDate: '2019-08-24T14:15:22Z'
                    lastUpdateDate: '2019-08-24T14:15:22Z'
                    adminActivities:
                      - startDate: '2019-08-24'
                        endDate: '2019-08-24'
                        adminCompanyId: e028496c-e766-4bb7-bb98-e5c8d13cbbac
                        extraordinary: true
                    accounts:
                      - number: '12341234312'
                        bank: Fort Knox
                        IBAN: IT5492843765923878263463
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      operationId: get-condo-by-condo-id
      x-stoplight:
        id: 3yv80wdr060ps
      parameters:
        - schema:
            type: string
            format: uuid
          in: query
          name: condo-id
          required: true
          description: The UUID of the condo to get info about
      description: Retrieve the details of the given condo
    parameters: []
  /residential-units:
    get:
      summary: Get units details by condo id
      tags:
        - Tenant
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Residential-Unit'
                  x-stoplight:
                    id: r1hqn6f9df50p
              examples:
                Example 1:
                  value:
                    - id: string
                      ownedFraction: 0.5
                      floor: 2
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      operationId: get-units-by-condo-id
      x-stoplight:
        id: 3yv80wdr060ps
      parameters:
        - schema:
            type: string
            format: uuid
          in: query
          name: condo-id
          required: true
          description: The UUID of the condo to get info about
      description: Retrieve the details of the owned residential units in the given condo
    parameters: []
  /healthz:
    get:
      summary: Healthcheck
      tags:
        - Users
      responses:
        '200':
          description: OK
        '500':
          description: Internal Server Error
      operationId: get-healthz
      description: An health check endpoint
      security: []
  /users/check-email:
    get:
      summary: Check email registration
      tags:
        - Users
      responses:
        '200':
          description: The email was found
          content:
            application/json:
              schema:
                type: object
                properties:
                  mailStatus:
                    type: string
                    x-stoplight:
                      id: wwsgh5hlc327c
                    enum:
                      - NOT_REGISTERED
                      - MISSING_TS_ID
                      - REGISTERED
                required:
                  - mailStatus
              examples:
                Example 1:
                  value:
                    mailStatus: NOT_REGISTERED
                Example 2:
                  value:
                    mailStatus: MISSING_TS_ID
                Example 3:
                  value:
                    mailStatus: REGISTERED
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error
      operationId: get-users-check-email-registration
      x-stoplight:
        id: 1vc3ql9xnp9s1
      security: []
      description: Check whether there is a user registered with the given email
      parameters:
        - schema:
            type: string
          in: query
          name: email
          description: The email to be checked
          required: true
    parameters: []
  /users/brainware-account:
    parameters: []
    post:
      summary: Link Brainware account
      operationId: post-users-link-brainware-account
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal Server Error
      tags:
        - Users
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                pid:
                  type: string
                  x-stoplight:
                    id: 8myasvj820nr1
                username:
                  type: string
                  x-stoplight:
                    id: 8cumx1mynvpuz
                password:
                  type: string
                  x-stoplight:
                    id: zy2wu53ctlwqv
              required:
                - pid
                - username
                - password
            examples:
              Example 1:
                value:
                  pid: '968'
                  username: IronMan
                  password: P3pp3rP0tt$
      description: Link the current user to a previous Brainware account
  /users/miocondominio-account:
    parameters: []
    post:
      summary: Link MioCondominio account
      operationId: post-users-link-miocondominio-account
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal Server Error
      tags:
        - Users
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                pid:
                  type: string
                  x-stoplight:
                    id: 8myasvj820nr1
                username:
                  type: string
                  x-stoplight:
                    id: 8cumx1mynvpuz
                password:
                  type: string
                  x-stoplight:
                    id: zy2wu53ctlwqv
              required:
                - pid
                - username
                - password
            examples:
              Example 1:
                value:
                  pid: '968'
                  username: IronMan
                  password: P3pp3rP0tt$
      description: Link the current user to a previous MioCondominio account
  /users/me:
    parameters: []
    get:
      summary: Get my user Info
      responses:
        '200':
          description: User Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/User'
                    x-stoplight:
                      id: kmsqah29sscp5
                  firstAccess:
                    type: boolean
                    x-stoplight:
                      id: nuf67mghvx17k
                required:
                  - user
                  - firstAccess
              examples:
                Example 1:
                  value:
                    user:
                      roles:
                        - type: Supplier
                          supplierCompanyId: 60e634ac-9cf5-4a73-a6b6-1e5d15116468
                          companyName: Stark Industries
                        - type: Tenant
                          condoCompanyId: 60e634ac-9cf5-4a73-a6b6-1e5d15116468
                          condoAddress: '10880 Malibu Point, 90265'
                    firstAccess: true
        '401':
          description: Unauthorized
        '404':
          description: User Not Found
        '500':
          description: Internal Server Error
      operationId: get-users-me
      description: Retrieve the information of the authenticated user.
      x-stoplight:
        id: bexwy0vpz2q0e
      tags:
        - Users
      security:
        - bearerAuth: []
    servers: []
  /users/personal-data/me:
    parameters: []
    get:
      summary: Get my personal data
      responses:
        '200':
          description: User Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Personal-Data'
              examples: {}
        '401':
          description: Unauthorized
        '404':
          description: User Not Found
        '500':
          description: Internal Server Error
      operationId: get-my-personal-data
      description: Retrieve the personal data of the authenticated user.
      x-stoplight:
        id: bexwy0vpz2q0e
      tags:
        - Users
      security:
        - bearerAuth: []
    servers: []
components:
  schemas:
    Address:
      title: Address
      x-stoplight:
        id: z50xas5yrryv1
      type: string
      examples:
        - 'Via Emilia Ovest, 129'
    Admin-Activity:
      title: Admin-Activity
      x-stoplight:
        id: 1z8o4gyxv1p3m
      type: object
      examples:
        - startDate: '2019-08-24'
          endDate: '2019-08-24'
          adminCompanyId: e028496c-e766-4bb7-bb98-e5c8d13cbbac
          extraordinary: true
      properties:
        startDate:
          type: string
          x-stoplight:
            id: lavv5k642kf8j
          format: date
        endDate:
          type: string
          x-stoplight:
            id: v86efk74av1nm
          format: date
        adminCompanyId:
          type: string
          x-stoplight:
            id: kkzm3msj7rb69
          format: uuid
        extraordinary:
          type: boolean
          x-stoplight:
            id: gy9cyqbzyq9l6
      required:
        - startDate
        - adminCompanyId
        - extraordinary
    Administrator:
      title: Administrator
      x-stoplight:
        id: sd189gyzoi27u
      type: object
      examples:
        - firstName: Harold
          lastName: Hogan
          role: string
          creationDate: '2019-08-24T14:15:22Z'
          lastUpdateDate: '2019-08-24T14:15:22Z'
          studio: Stark Industries
          receptionHours: Lun-Ven 8-13 14-18
          address: 'Via Emilia Ovest, 129'
          contacts:
            id: string
            phone: '345123456789'
            emergencyPhone: string
            email: happy@gmail.com
            pec: user@pec-example.com
      properties:
        firstName:
          type: string
          x-stoplight:
            id: j0vhfkrswcyro
        lastName:
          type: string
          x-stoplight:
            id: oqt0cgyv7t243
        role:
          type: string
          x-stoplight:
            id: 0vvcvhzvbyimd
        creationDate:
          type: string
          x-stoplight:
            id: hza6og3v3wggr
          format: date-time
        lastUpdateDate:
          type: string
          x-stoplight:
            id: rpk159qvf52gp
          format: date-time
        studio:
          type: string
          x-stoplight:
            id: 5w7wfm9o3jq15
        receptionHours:
          type: string
          x-stoplight:
            id: m2j37ue8wdmmw
        address:
          $ref: '#/components/schemas/Address'
          x-stoplight:
            id: 84lkzpn9g7er3
        contacts:
          $ref: '#/components/schemas/Contact'
          x-stoplight:
            id: hsqh52owdtc33
      required:
        - firstName
        - lastName
        - creationDate
        - lastUpdateDate
        - studio
        - contacts
    Alert:
      title: Alert
      x-stoplight:
        id: ss8myksrd80v4
      type: object
      examples:
        - title: Biciclette
          description: Si prega di evitare di lasciare biciclette nell'androne
          creationDate: '2019-08-24T14:15:22Z'
          type: Regolamento
      properties:
        title:
          type: string
          x-stoplight:
            id: 4yjmb7ly5vava
        description:
          type: string
          x-stoplight:
            id: fy2ildq5okt1v
        creationDate:
          type: string
          x-stoplight:
            id: u53tidut3a6cq
          format: date-time
        type:
          x-stoplight:
            id: myk55xlltrcoh
          enum:
            - Scadenza
            - Manutenzione
            - Comunicazione
            - Generale
            - Regolamento
          type: string
      required:
        - title
        - creationDate
        - type
    Bank-Account:
      title: Bank-Account
      x-stoplight:
        id: w7jmblsga16qp
      type: object
      properties:
        number:
          type: string
          x-stoplight:
            id: 4n9w6ms8gavdn
        bank:
          type: string
          x-stoplight:
            id: b4jo20te3vxlq
        IBAN:
          type: string
          x-stoplight:
            id: lfbbn7jaa1eap
      required:
        - number
        - bank
        - IBAN
      examples:
        - number: '12341234312'
          bank: Fort Knox
          IBAN: IT5492843765923878263463
    Condo:
      title: Condo
      x-stoplight:
        id: ouda83379zkok
      type: object
      examples:
        - name: Morgan
          address: 'Via Emilia Ovest, 129'
          fiscalCode: STRTNY70E29Z404M
          type: Condominio
          creationDate: '2019-08-24T14:15:22Z'
          lastUpdateDate: '2019-08-24T14:15:22Z'
          adminActivities:
            - startDate: '2019-08-24'
              endDate: '2019-08-24'
              adminCompanyId: e028496c-e766-4bb7-bb98-e5c8d13cbbac
              extraordinary: true
          accounts:
            - number: '12341234312'
              bank: Fort Knox
              IBAN: IT5492843765923878263463
      properties:
        name:
          type: string
          x-stoplight:
            id: f6sde9ilzw2a1
        address:
          $ref: '#/components/schemas/Address'
          x-stoplight:
            id: t2otiys3bzv5m
        fiscalCode:
          type: string
          x-stoplight:
            id: 0rqvqbk8uh4cy
        type:
          x-stoplight:
            id: oq6wqzybssogr
          enum:
            - Condominio
            - SuperCondominio
          type: string
        creationDate:
          type: string
          x-stoplight:
            id: fkduqobxlxed0
          format: date-time
        lastUpdateDate:
          type: string
          x-stoplight:
            id: go00yw4r5q2n3
          format: date-time
        adminActivities:
          type: array
          x-stoplight:
            id: sc5uqezcglcvy
          items:
            $ref: '#/components/schemas/Admin-Activity'
            x-stoplight:
              id: urfcfnhval9ma
        accounts:
          type: array
          x-stoplight:
            id: bf1bl3invw1yr
          items:
            $ref: '#/components/schemas/Bank-Account'
            x-stoplight:
              id: g02r9ka96n6px
      required:
        - name
        - address
        - type
        - creationDate
        - lastUpdateDate
        - adminActivities
    Contact:
      title: Contact
      x-stoplight:
        id: bz3bf4icrlbj5
      type: object
      examples:
        - id: string
          phone: '345123456789'
          emergencyPhone: string
          email: user@example.com
          pec: user@pec-example.com
      properties:
        id:
          type: string
        phone:
          type: string
          x-stoplight:
            id: 12afq6qakbohj
        cellphone:
          type: string
          x-stoplight:
            id: m9owrh20mmbfq
        emergencyPhone:
          type: string
          x-stoplight:
            id: du2ydo98vn6w9
        fax:
          type: string
          x-stoplight:
            id: jrtf89h8gfh11
        email:
          type: string
          x-stoplight:
            id: kroz36s6959t0
          format: email
        pec:
          type: string
          x-stoplight:
            id: l979q91p2b6w6
          format: email
      required:
        - id
        - phone
        - emergencyPhone
        - email
    Residential-Unit:
      title: Residential-Unit
      x-stoplight:
        id: gwg93kyw7w39s
      type: object
      examples:
        - id: string
          ownedFraction: 0.5
          floor: 2
      properties:
        id:
          type: string
        ownedFraction:
          type: number
          x-stoplight:
            id: qb8xsqu4f9rin
          exclusiveMinimum: 0
          maximum: 1
          example: 0.5
          format: float
        floor:
          type: integer
          x-stoplight:
            id: 43bvjato1okbp
      required:
        - id
        - ownedFraction
    Role:
      title: Role
      x-stoplight:
        id: c5i27osgdsk0g
      anyOf:
        - x-stoplight:
            id: bfx1v1a5t26y5
          properties:
            type:
              x-stoplight:
                id: 4ppeqehjjm93v
              enum:
                - Supplier
              type: string
            supplierCompanyId:
              type: string
              x-stoplight:
                id: jcv8thl7kahz7
              format: uuid
            companyName:
              type: string
              x-stoplight:
                id: qxpi1suzjsdx1
          required:
            - type
            - supplierCompanyId
            - companyName
        - x-stoplight:
            id: qdgob5qhawdq0
          properties:
            type:
              x-stoplight:
                id: qim93e8mxswg5
              enum:
                - Tenant
              type: string
            condoCompanyId:
              type: string
              x-stoplight:
                id: ninbczs22urk7
              format: uuid
            condoAddress:
              $ref: '#/components/schemas/Address'
              x-stoplight:
                id: 4k25eg95p0kjf
          required:
            - type
            - condoCompanyId
            - condoAddress
        - x-stoplight:
            id: 1oymp83ebzw2y
          properties:
            type:
              type: string
              x-stoplight:
                id: 5mqdokfjc8zae
              enum:
                - Admin
            adminCompanyId:
              type: string
              x-stoplight:
                id: 5ejlgis332hya
              format: uuid
            companyName:
              type: string
              x-stoplight:
                id: khzirtqt6d97e
          required:
            - type
            - adminCompanyId
            - companyName
      examples:
        - type: Tenant
          condoCompanyId: 2c7f0822-af41-49ba-8d30-cdf65b77d960
          condoAddress: 'Via Emilia Ovest, 129'
        - type: Supplier
          supplierCompanyId: b2e6a1c3-1a5e-44ae-a8fd-81f76fd715cf
          companyName: Multicerta s.r.l.
      type: object
    Task:
      title: Task
      x-stoplight:
        id: nogmilwtad7pj
      type: object
      examples:
        - title: Tetto
          description: Ci sono perdite perché si è rotta una tegola del tetto
          issueDate: '2019-08-24T14:15:22Z'
          status: Nuovo
          note: la grandine ha rotto la tegola
          priority: Alta
      properties:
        title:
          type: string
          x-stoplight:
            id: j1623kzlr7sn7
        description:
          type: string
          x-stoplight:
            id: wc3b7oh0eu22b
        issueDate:
          type: string
          x-stoplight:
            id: xll5zatfitx3m
          format: date-time
        status:
          x-stoplight:
            id: gltxvf8xnfaar
          enum:
            - Nuovo
            - In corso
            - Risolto
            - Chiuso
          type: string
        note:
          type: string
          x-stoplight:
            id: ea5cz6auz04i8
        priority:
          x-stoplight:
            id: xku7hf59yvpuy
          enum:
            - Alta
            - Media
            - Bassa
          type: string
      required:
        - title
        - issueDate
        - status
        - priority
    User:
      title: User
      type: object
      x-stoplight:
        id: 08wli6aetbnl7
      examples:
        - roles:
            - type: Supplier
              supplierCompanyId: 60e634ac-9cf5-4a73-a6b6-1e5d15116468
              companyName: Stark Industries
            - type: Tenant
              condoCompanyId: 60e634ac-9cf5-4a73-a6b6-1e5d15116468
              condoAddress: '10880 Malibu Point, 90265'
      properties:
        roles:
          type: array
          x-stoplight:
            id: 6phdfbmd43rl1
          description: The roles that user can assume to operate into the app
          items:
            $ref: '#/components/schemas/Role'
            x-stoplight:
              id: usf4l3srvkcz5
      required:
        - roles
    Personal-Data:
      type: object
      x-stoplight:
        id: c7yeu47oix2id
      x-examples:
        Example 1:
          name: Tony Stark
          email: user@example.com
          fiscalCode: string
          vatCode: string
          contacts:
            id: string
            phone: '345123456789'
            emergency-phone: string
            email: user@example.com
            pec: user@pec-example.com
          address: 'Via Emilia Ovest, 129'
      examples:
        - name: Tony Stark
          email: iron@man.us
          fiscalCode: string
          vatCode: string
          contacts:
            id: string
            phone: string
            emergency-phone: string
            email: string
            pec: string
          address: string
      properties:
        name:
          type: string
          description: First name + last name
        email:
          type: string
          format: email
        fiscalCode:
          type: string
        vatCode:
          type: string
        contacts:
          $ref: '#/components/schemas/Contact'
        address:
          $ref: '#/components/schemas/Address'
      required:
        - email
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      description: The "Authorization" header must be a JWT bearer token issued by TS Identity containing the user email and the assigned TS ID in UUID format
security:
  - bearerAuth: []
tags:
  - name: Admin
  - name: Supplier
  - name: Tenant
  - name: Users
